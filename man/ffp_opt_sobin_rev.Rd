% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ffp_opt_sobin.R
\name{ffp_opt_sobin_rev}
\alias{ffp_opt_sobin_rev}
\title{Theorem 1, Equation 6, Resource Equivalent Variation}
\usage{
ffp_opt_sobin_rev(
  ar_queue_optimal,
  ar_bin_observed,
  ar_A,
  ar_alpha,
  ar_beta,
  fl_lambda
)
}
\arguments{
\item{ar_queue_optimal}{optimal targeting array index of ranking from 1 to N targetting queue}

\item{ar_bin_observed}{observed vector of binary zeros and ones}

\item{ar_A}{float array of expected effect of provision for each i of N}

\item{ar_alpha}{float array of planner bias}

\item{ar_beta}{string name of the A_i variable, any nonlinear or linear evaluated expected outcome}
}
\value{
an float value for resource equivalent variation, see Theorem 1
}
\description{
This does not solve for the full solution, just the targeting queue, individual position on queue.
}
\examples{
library(tibble)
library(dplyr)
library(tidyr)  
fl_lambda <- -1
ar_alpha <- c(0.1,1.5,2.5,4  ,9,1.2,3,2,8)
ar_A <-     c(0.5,1.5,3.5,6.5,1.9,3,4,6,4)
ar_beta <-  rep(0, length(ar_A)) + 1/length(ar_A)
mt_alpha_A <- cbind(ar_alpha, ar_A, ar_beta)
ar_st_varnames <- c('alpha', 'A', 'beta')
tb_alpha_A <- as_tibble(mt_alpha_A) \%>\% rename_all(~c(ar_st_varnames))
tb_alpha_A
ar_rho <- c(-1)
for (it_rho_ctr in seq(1,length(ar_rho))) {
  fl_rho <- ar_rho[it_rho_ctr]
  ar_it_rank <- tb_alpha_A \%>\% rowwise() \%>\%
    do(rk = ffp_opt_sobin_target_row(., fl_rho,
                                     ar_A, ar_alpha, ar_beta)) \%>\%
    unnest(rk) \%>\% pull(rk)
  cat('fl_rho:', fl_rho, 'ar_it_rank:', ar_it_rank, '\n')
}
ar_bin_observed <- c(0,1,0,1,0,0,1,1,0)
ar_queue_optimal <- ar_it_rank
ffp_opt_sobin_rev(ar_queue_optimal, ar_bin_observed, ar_A, ar_alpha, ar_beta, fl_lambda)
}
\references{
\url{https://fanwangecon.github.io/PrjOptiAlloc/reference/ffp_opt_sobin_rev.html}
\url{https://fanwangecon.github.io/PrjOptiAlloc/articles/ffv_opt_sobin_rev.html}
}
\author{
Fan Wang, \url{http://fanwangecon.github.io}
}
